[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introducción",
    "section": "",
    "text": "Bienvenidos\nLa idea de esta página es ser una ayuda con materiales y resolución de los ejercicos del practico del curso de Introducción a los Procesos Estocásticos.\n\n\nCalendario\n\n\n\n\n\n\n\n\n\nSemana\nFecha\nTema\nNota\n\n\n\n\n1\n19-Aug-25 Tue\n• Presentación• Introducción procesos estocásticos• Problema de la ruina\n\n\n\n\n21-Aug-25 Thu\n• Recurrencia para proba de ruina• Ecuaciones en diferencias• Fórmula para proba de ruina• Límite cuando \\(S=\\infty\\)\nP1\n\n\n2\n26-Aug-25 Tue\n• Duración media del juego• Recurrencia para duración media• Fórmula para duración media• Límite cuando \\(S=\\infty\\)\nP1\n\n\n\n28-Aug-25 Thu",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "practico1-solucion.html",
    "href": "practico1-solucion.html",
    "title": "Soluciones Practico 1",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n\n\n\n\n\nEscribir un programa mediante el cual simular y visualizar la evolución del capital del jugador A\n\ndef apuesta(p:float):\n  if np.random.random() &lt; p:\n    return 1\n  else:\n    return -1\n\n\ndef juego(p:float, S:int, X0:int):\n  trayectoria = [X0]\n  X = X0\n  while (X &gt; 0) and (X &lt; S):\n    X += apuesta(p)\n    trayectoria.append(X)\n  return trayectoria\n\n\np = 0.5\nS = 10\nX0 = 5\ntrayectoria = juego(p, S, X0)\n\n\n\nCode\nprint('Trayectoria: ', trayectoria)\n\n\nTrayectoria:  [5, 6, 7, 8, 9, 10]\n\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(trayectoria, marker='o')\nplt.title('Juego de la ruina - Una trayectoria')\nplt.ylim(-0.5, S+0.5)\nplt.axhline(y=S, linestyle='--')\nplt.axhline(y=0, linestyle='--')\nplt.xlabel(r'Turno $n$')\nplt.ylabel(r'Capital $X_n$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\ntodas_trayectorias = []\nfor _ in range(5):\n  todas_trayectorias.append(juego(p, S, X0))\n\n\n\nCode\nplt.figure(figsize=(8,5))\nfor trayectoria in todas_trayectorias:\n  plt.plot(trayectoria, marker='o')\nplt.title('Juego de la ruina - Varias trayectorias') # Added title for clarity\nplt.ylim(-0.5, S+0.5)\nplt.axhline(y=S, linestyle='--')\nplt.axhline(y=0, linestyle='--')\nplt.xlabel(r'Turno $n$')\nplt.ylabel(r'Capital $X_n$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nDesarrollar el programa anterior de manera de estimar, mediante la simulación de un número adecuado de trayectorias del capital del jugador A, la probabilidad de ruina.\n\ndef probabilidad_ruina(p:float, S:int, X0:int, N:int):\n  ruinas = 0\n  for _ in range(N):\n    trayectoria = juego(p, S, X0)\n    if trayectoria[-1] == 0:\n      ruinas += 1\n  return ruinas/N\n\n\np = 0.7\nS = 10\nX0 = 5\nN = 10000\nprint(f'Probabilidad de ruina: {probabilidad_ruina(p, S, X0, N)}')\n\nProbabilidad de ruina: 0.0166\n\n\n\nfS = []\nfor X0 in range(S+1):\n  fS.append(probabilidad_ruina(p, S, X0, N))\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(fS, marker='o')\nplt.title('Probabilidad de ruina')\nplt.xlabel(r'Capital inicial $X_0$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef probabilidad_ruina_Markov(p:float, S:int, X0:int, X1:int, N:int):\n  ruinas = 0\n  condicion = 0\n  for _ in range(N):\n    trayectoria = juego(p, S, X0)\n    if trayectoria[1] == X1:\n      condicion += 1\n      if trayectoria[-1] == 0:\n        ruinas += 1\n  return ruinas/condicion\n\n\np = 0.5\nS = 10\nX0 = 5\nN = 10000\np0 = probabilidad_ruina(p, S, X0+1, N)\np1 = probabilidad_ruina_Markov(p, S, X0, X0+1, N)\nprint(f'p0: {p0}\\np1: {p1}')\n\np0: 0.4021\np1: 0.4059642147117296",
    "crumbs": [
      "Soluciones",
      "Soluciones Practico 1"
    ]
  },
  {
    "objectID": "practico1-solucion.html#ejercicio-1",
    "href": "practico1-solucion.html#ejercicio-1",
    "title": "Soluciones Practico 1",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n\n\n\n\n\nEscribir un programa mediante el cual simular y visualizar la evolución del capital del jugador A\n\ndef apuesta(p:float):\n  if np.random.random() &lt; p:\n    return 1\n  else:\n    return -1\n\n\ndef juego(p:float, S:int, X0:int):\n  trayectoria = [X0]\n  X = X0\n  while (X &gt; 0) and (X &lt; S):\n    X += apuesta(p)\n    trayectoria.append(X)\n  return trayectoria\n\n\np = 0.5\nS = 10\nX0 = 5\ntrayectoria = juego(p, S, X0)\n\n\n\nCode\nprint('Trayectoria: ', trayectoria)\n\n\nTrayectoria:  [5, 6, 7, 8, 9, 10]\n\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(trayectoria, marker='o')\nplt.title('Juego de la ruina - Una trayectoria')\nplt.ylim(-0.5, S+0.5)\nplt.axhline(y=S, linestyle='--')\nplt.axhline(y=0, linestyle='--')\nplt.xlabel(r'Turno $n$')\nplt.ylabel(r'Capital $X_n$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\ntodas_trayectorias = []\nfor _ in range(5):\n  todas_trayectorias.append(juego(p, S, X0))\n\n\n\nCode\nplt.figure(figsize=(8,5))\nfor trayectoria in todas_trayectorias:\n  plt.plot(trayectoria, marker='o')\nplt.title('Juego de la ruina - Varias trayectorias') # Added title for clarity\nplt.ylim(-0.5, S+0.5)\nplt.axhline(y=S, linestyle='--')\nplt.axhline(y=0, linestyle='--')\nplt.xlabel(r'Turno $n$')\nplt.ylabel(r'Capital $X_n$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nDesarrollar el programa anterior de manera de estimar, mediante la simulación de un número adecuado de trayectorias del capital del jugador A, la probabilidad de ruina.\n\ndef probabilidad_ruina(p:float, S:int, X0:int, N:int):\n  ruinas = 0\n  for _ in range(N):\n    trayectoria = juego(p, S, X0)\n    if trayectoria[-1] == 0:\n      ruinas += 1\n  return ruinas/N\n\n\np = 0.7\nS = 10\nX0 = 5\nN = 10000\nprint(f'Probabilidad de ruina: {probabilidad_ruina(p, S, X0, N)}')\n\nProbabilidad de ruina: 0.0166\n\n\n\nfS = []\nfor X0 in range(S+1):\n  fS.append(probabilidad_ruina(p, S, X0, N))\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(fS, marker='o')\nplt.title('Probabilidad de ruina')\nplt.xlabel(r'Capital inicial $X_0$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef probabilidad_ruina_Markov(p:float, S:int, X0:int, X1:int, N:int):\n  ruinas = 0\n  condicion = 0\n  for _ in range(N):\n    trayectoria = juego(p, S, X0)\n    if trayectoria[1] == X1:\n      condicion += 1\n      if trayectoria[-1] == 0:\n        ruinas += 1\n  return ruinas/condicion\n\n\np = 0.5\nS = 10\nX0 = 5\nN = 10000\np0 = probabilidad_ruina(p, S, X0+1, N)\np1 = probabilidad_ruina_Markov(p, S, X0, X0+1, N)\nprint(f'p0: {p0}\\np1: {p1}')\n\np0: 0.4021\np1: 0.4059642147117296",
    "crumbs": [
      "Soluciones",
      "Soluciones Practico 1"
    ]
  },
  {
    "objectID": "practico1-solucion.html#ejercicio-2",
    "href": "practico1-solucion.html#ejercicio-2",
    "title": "Soluciones Practico 1",
    "section": "Ejercicio 2",
    "text": "Ejercicio 2\n\nParte a\n\nEstimación de la duración esperada del juego\n\ndef simular_duracion_juego(p: float, S: int, X0: int) -&gt; int:\n    trayectoria = [X0]\n    X = X0\n    turnos = 0\n    while (X &gt; 0) and (X &lt; S):\n        X += apuesta(p) ## funcion del ejercicio 1\n        turnos += 1\n    return turnos\n\n\ndef estimar_duracion_esperada(p: float, S: int, X0: int, N: int) -&gt; float:\n    duraciones = []\n    for _ in range(N):\n        duraciones.append(simular_duracion_juego(p, S, X0))\n    return np.mean(duraciones)\n\n\n\n(i) Duración esperada vs. capital inicial \\(X_0 = k\\)\n\np_ej2_i = 0.5\nS_ej2_i = 10\nN_ej2_i = 5000 \n\nduracion_vs_X0 = []\nfor k_val in range(S_ej2_i + 1):\n    duracion_vs_X0.append(estimar_duracion_esperada(p_ej2_i, S_ej2_i, k_val, N_ej2_i))\n\nprint(\"Duración esperada vs. Capital inicial:\", [float(d) for d in duracion_vs_X0])\n\nDuración esperada vs. Capital inicial: [0.0, 8.9504, 16.0192, 21.2636, 24.0444, 25.2224, 24.2688, 20.9532, 16.2388, 8.832, 0.0]\n\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(range(S_ej2_i + 1), duracion_vs_X0, marker='o')\nplt.title(f'Duración Esperada vs. Capital Inicial (S={S_ej2_i}, p={p_ej2_i})')\nplt.xlabel(r'Capital inicial $X_0$')\nplt.ylabel('Duración Esperada del Juego')\nplt.xticks(range(S_ej2_i + 1))\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n(ii) Duración esperada vs. probabilidad \\(p\\)\n\nX0_ej2_ii = 5\nS_ej2_ii = 10\nN_ej2_ii = 5000 \n\nprobabilidades = np.linspace(0.1, 0.9, 9) \nduracion_vs_p = []\nfor p_val in probabilidades:\n    duracion_vs_p.append(estimar_duracion_esperada(p_val, S_ej2_ii, X0_ej2_ii, N_ej2_ii))\n\nprint(\"Duración esperada vs. Probabilidad p:\", [float(d) for d in duracion_vs_p])\n\nDuración esperada vs. Probabilidad p: [6.232, 8.312, 12.1096, 19.4804, 24.792, 18.9076, 11.9584, 8.338, 6.246]\n\n\n\n\nCode\nplt.figure(figsize=(8,5))\nplt.plot(probabilidades, duracion_vs_p, marker='o')\nplt.title(f'Duración Esperada vs. Probabilidad p (S={S_ej2_ii}, X0={X0_ej2_ii})')\nplt.xlabel(r'Probabilidad $p$ de ganar')\nplt.ylabel('Duración Esperada del Juego')\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nParte b\nVisualizar las estimaciones de la duración esperada del juego y compararlas con las correspondientes expresiones analíticas.\n\nFunciones analíticas\n\ndef prob_ruina_analitica(p: float, S: int, k: int) -&gt; float:\n    q = 1 - p\n    if p == 0.5:\n        return (S - k) / S\n    else:\n        ratio = q / p\n        return (ratio**k - ratio**S) / (1 - ratio**S)\n\n\n\nCode\ndef duracion_esperada_analitica(p: float, S: int, k: int) -&gt; float:\n    q = 1 - p\n    if p == 0.5:\n        return k * (S - k)\n    else:\n        prob_ganar_analitica = 1 - prob_ruina_analitica(p, S, k)\n        if p != q:\n            return (k / (q - p)) - (S / (q - p)) * ((1 - (q / p)**k) / (1 - (q / p)**S))\n        else:\n            return k * (S - k)\n\n\n\n\n(i) Duración esperada vs. capital inicial \\(X_0 = k\\) (Comparación)\n\nduracion_analitica_X0 = []\nfor k_val in range(S_ej2_i + 1):\n    duracion_analitica_X0.append(duracion_esperada_analitica(p_ej2_i, S_ej2_i, k_val))\n\nprint(\"Duración analítica vs. Capital inicial:\", [float(d) for d in duracion_analitica_X0])\n\nDuración analítica vs. Capital inicial: [0.0, 9.0, 16.0, 21.0, 24.0, 25.0, 24.0, 21.0, 16.0, 9.0, 0.0]\n\n\n\n\nCode\nplt.figure(figsize=(10,6)) \nplt.plot(range(S_ej2_i + 1), duracion_vs_X0, marker='o', label='Simulado', linestyle='--')\nplt.plot(range(S_ej2_i + 1), duracion_analitica_X0, marker='x', label='Analítico', linestyle='-')\nplt.title(f'Comparación Duración Esperada vs. Capital Inicial (S={S_ej2_i}, p={p_ej2_i})')\nplt.xlabel(r'Capital inicial $X_0$')\nplt.ylabel('Duración Esperada del Juego')\nplt.xticks(range(S_ej2_i + 1))\nplt.grid(True)\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n(ii) Duración esperada vs. probabilidad \\(p\\) (Comparación)\n\nduracion_analitica_p = []\nfor p_val in probabilidades:\n    duracion_analitica_p.append(duracion_esperada_analitica(p_val, S_ej2_ii, X0_ej2_ii))\n\nprint(\"Duración analítica vs. Probabilidad p:\", [float(d) for d in duracion_analitica_p])\n\nDuración analítica vs. Probabilidad p: [6.249788314987299, 8.317073170731707, 12.14369501466276, 19.181818181818183, 25.0, 19.18181818181818, 12.143695014662754, 8.317073170731707, 6.249788314987299]\n\n\n\n\nCode\nplt.figure(figsize=(10,6))\nplt.plot(probabilidades, duracion_vs_p, marker='o', label='Simulado', linestyle='--')\nplt.plot(probabilidades, duracion_analitica_p, marker='x', label='Analítico', linestyle='-')\nplt.title(f'Comparación Duración Esperada vs. Probabilidad p (S={S_ej2_ii}, X0={X0_ej2_ii})')\nplt.xlabel(r'Probabilidad $p$ de ganar')\nplt.ylabel('Duración Esperada del Juego')\nplt.grid(True)\nplt.legend()\nplt.show()",
    "crumbs": [
      "Soluciones",
      "Soluciones Practico 1"
    ]
  },
  {
    "objectID": "practicos.html",
    "href": "practicos.html",
    "title": "Practicos",
    "section": "",
    "text": "Practicos\nContenido de la sección de Practicos."
  },
  {
    "objectID": "practico1-letra.html",
    "href": "practico1-letra.html",
    "title": "Practico 1",
    "section": "",
    "text": "Considere el problema de la ruina del jugador.\n\nEscribir un programa mediante el cual simular y visualizar la evolución del capital del jugador A.\nDesarrollar el programa anterior de manera de estimar, mediante la simulación de un número adecuado de trayectorias del capital de jugador A:\nla probabilidad de ruina del jugador A, en función de su estado inicial \\(X_0 = k\\), para valores asignados del capital total \\(S\\) y de la probabilidad, \\(p\\), de que el jugador A gane en cada etapa del juego;\n\n\nla probabilidad de ruina del jugador A, en función de su probabilidad \\(p\\) de ganar en cada etapa del juego, para valores asignados del capital total \\(S\\) y del estado inicial \\(X_0 = k\\).\nVisualizar las estimaciones de la probabilidad de ruina del jugador A y compararlas con las correspondientes expresiones analíticas.",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  },
  {
    "objectID": "practico1-letra.html#ejercicio-1",
    "href": "practico1-letra.html#ejercicio-1",
    "title": "Practico 1",
    "section": "",
    "text": "Considere el problema de la ruina del jugador.\n\nEscribir un programa mediante el cual simular y visualizar la evolución del capital del jugador A.\nDesarrollar el programa anterior de manera de estimar, mediante la simulación de un número adecuado de trayectorias del capital de jugador A:\nla probabilidad de ruina del jugador A, en función de su estado inicial \\(X_0 = k\\), para valores asignados del capital total \\(S\\) y de la probabilidad, \\(p\\), de que el jugador A gane en cada etapa del juego;\n\n\nla probabilidad de ruina del jugador A, en función de su probabilidad \\(p\\) de ganar en cada etapa del juego, para valores asignados del capital total \\(S\\) y del estado inicial \\(X_0 = k\\).\nVisualizar las estimaciones de la probabilidad de ruina del jugador A y compararlas con las correspondientes expresiones analíticas.",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  },
  {
    "objectID": "practico1-letra.html#ejercicio-2",
    "href": "practico1-letra.html#ejercicio-2",
    "title": "Practico 1",
    "section": "Ejercicio 2",
    "text": "Ejercicio 2\nConsidere el problema de la ruina del jugador y, en particular, la variable aleatoria \\(T_{0;S}\\) = duración del juego.\n\nAmpliar el programa de computación desarrollado en el ejercicio anterior a los efectos de estimar, mediante la simulación de un número adecuado de trayectorias del capital de jugador A:\nla duración esperada del juego, en función del capital inicial del jugador A, \\(X_0 = k\\), para valores asignados del capital total \\(S\\) y de la probabilidad, \\(p\\), de que el jugador A gane en cada etapa del juego;\n\n\nla duración esperada del juego, en función de la probabilidad, \\(p\\), de que el jugador A gane en cada etapa del juego, para valores asignados del capital total \\(S\\) y del estado inicial \\(X_0 = k\\).\n\n\nVisualizar las estimaciones de la duración esperada del juego y compararlas con las correspondientes expresiones analíticas.",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  },
  {
    "objectID": "practico1-letra.html#ejercicio-3",
    "href": "practico1-letra.html#ejercicio-3",
    "title": "Practico 1",
    "section": "Ejercicio 3",
    "text": "Ejercicio 3\nConsideramos un juego de ruina del jugador con posibilidad de empate (también llamado lazy random walk): en el tiempo \\(n\\) la ganancia \\(X_n\\) del Jugador A puede aumentar en una unidad con probabilidad \\(r \\in (0; 1/2]\\), disminuir en una unidad con probabilidad \\(r\\), o permanecer igual con probabilidad \\(1 - 2r\\). Definimos\n\\[ f (k) := P(RA | X_0 = k) \\]\ncomo la probabilidad de ruina del Jugador A, y\n\\[ h(k) := E[T_{0;S} | X_0 = k] \\]\ncomo la esperanza de la duración del juego \\(T_{0;S}\\) comenzando en \\(X_0 = k\\), para \\(k = 0; 1; \\dots ; S\\).\n\nUsando first step analysis, escriba la ecuación en diferencias que satisface \\(f (k)\\) y sus condiciones de contorno, \\(k = 0; 1; \\dots ; S\\). Nos referiremos a esta ecuación como la ecuación homogénea.\nResuelva la ecuación homogénea del apartado (a) por el método de su preferencia. ¿Es esta solución compatible con su intuición del problema? ¿Por qué?\nUsando first step analysis, escriba la ecuación en diferencias que satisface \\(h(k)\\) y sus condiciones de contorno, \\(k = 0; 1; \\dots ; S\\).\nEncuentre una solución particular de la ecuación del apartado (c).\nResuelva por completo la ecuación del apartado (c). Sugerencia: recuerde que la solución general es la suma de una solución particular y una solución de la ecuación homogénea.\n¿Cómo se comporta la duración media \\(h(k)\\) cuando \\(r \\to 0\\)? ¿Es esta solución compatible con su intuición del problema? ¿Por qué?",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  },
  {
    "objectID": "practico1-letra.html#ejercicio-4",
    "href": "practico1-letra.html#ejercicio-4",
    "title": "Practico 1",
    "section": "Ejercicio 4",
    "text": "Ejercicio 4\nConsideramos un proceso en tiempo discreto \\((X_n)_{n\\ge 0}\\) que modela la fortuna de un jugador con estados en \\(\\{0; 1; \\dots ; S\\}\\), con probabilidades de transición\n\\[ P(X_{n+1} = k + 1 | X_n = k) = p; \\quad k = 0; 1; \\dots ; S - 1; \\] \\[ P(X_{n+1} = k - 1 | X_n = k) = q; \\quad k = 1; 2; \\dots ; S; \\]\ny además\n\\[ P(X_{n+1} = 0 | X_n = 0) = q; \\]\npara todo \\(n \\in \\mathbb{N} = \\{0; 1; 2; \\dots\\}\\), donde \\(q = 1 - p\\) y \\(p \\in (0; 1]\\). En este modelo, al alcanzar el estado 0 el jugador puede “rebotar” (quedarse en 0 con probabilidad \\(q\\) o pasar a 1 con probabilidad \\(p\\)). Sea\n\\[ W = \\bigcup_{n \\in \\mathbb{N}} \\{X_n = S\\} \\]\nel evento de que el jugador finalmente gana la partida.\n\nDefina\n\n\\[ g(k) := P(W | X_0 = k); \\]\nla probabilidad de ganar habiendo partido del estado \\(k \\in \\{0; 1; \\dots ; S\\}\\). Usando first step analysis, escriba las ecuaciones en diferencias satisfechas por \\(g(k)\\), \\(k = 0; 1; \\dots ; S - 1\\), junto con sus condiciones de contorno (que pueden no darse de forma explícita). Esta pregunta es estándar, pero hay que prestar atención al comportamiento especial en el estado 0.\n\nObtenga \\(P(W | X_0 = k)\\) para todo \\(k = 0; 1; \\dots ; S\\) como la solución única del sistema de ecuaciones planteado en el punto 1.\n\nObservación: La respuesta es muy simple e intuitiva, pero se requiere una prueba (matemática).\n\nSea\n\n\\[ T_S := \\inf\\{n \\ge 0 : X_n = S\\} \\]\nel primer tiempo de llegada a \\(S\\) del proceso \\((X_n)_{n\\ge 0}\\), y\n\\[ h(k) := E[T_S | X_0 = k] \\]\nel tiempo esperado hasta que el jugador gana, partiendo de \\(k \\in \\{0; 1; \\dots ; S\\}\\). Usando first step analysis, escriba las ecuaciones en diferencias satisfechas por \\(h(k)\\) para \\(k = 0; 1; \\dots ; S - 1\\) e indique las condiciones de contorno correspondientes.\nNota: el estado 0 requiere especial cuidado; la ecuación para \\(h(0)\\) adquiere una forma particular y puede verse como una segunda condición de contorno.\n\nCalcule \\(E[T_S | X_0 = k]\\) para todo \\(k = 0; 1; \\dots ; S\\) resolviendo las ecuaciones del punto 3.\n\nSugerencia: Esta cuestión es más difícil que el punto 2 y puede omitirse en una primera lectura (su resultado no se usa luego). Se puede resolver la ecuación homogénea para \\(k = 1; 2; \\dots ; S - 1\\); una solución particular se obtiene observando que aquí cuenta el tiempo hasta que gana el Jugador A (no B). Como de costumbre, hay que tratar por separado los casos \\(p \\neq q\\) y \\(p = q = 1/2\\). La fórmula para \\(p = 1\\) es intuitiva y puede ayudar a verificar el resultado.\n\nDefina ahora\n\n\\[ T_0 := \\inf\\{n \\ge 0 : X_n = 0\\} \\]\ncomo el primer tiempo de llegada a 0. Escriba el valor de\n\\[ p_k := P(T_S &lt; T_0 | X_0 = k); \\]\ncomo función de \\(p\\), \\(S\\) y \\(k\\), para \\(k = 0; 1; \\dots ; S\\).\nNota: el evento \\(\\{T_S &lt; T_0\\}\\) significa “gana el Jugador A”.\n\nExplique por qué vale la igualdad (aplique propiedad de Markov y homogeneidad temporal)\n\n\\[ P(T_S &lt; T_0 | X_1 = k + 1; X_0 = k) = P(T_S &lt; T_0 | X_0 = k + 1); \\]\npara \\(k = 0; 1; \\dots ; S - 1\\) (basta una explicación en palabras).\n\nUsando la relación anterior, muestre que la probabilidad\n\n\\[ P(X_1 = k + 1 | X_0 = k \\text{ y } T_S &lt; T_0) = \\frac{p p_{k+1}}{p_k}; \\]\nde un paso hacia arriba sabiendo que primero se alcanza \\(S\\) es\npara \\(k = 1; 2; \\dots ; S - 1\\), donde \\(p_k\\) es el resultado del punto 5. ¿Cómo se compara esta probabilidad con el valor incondicional \\(p\\)?\n\nCalcule la probabilidad\n\n\\[ P(X_1 = k - 1 | X_0 = k \\text{ y } T_0 &lt; T_S); \\quad k = 1; 2; \\dots ; S; \\]\nde un paso hacia abajo sabiendo que primero se alcanza 0, usando un argumento análogo al del punto 7.\n\nSea\n\n\\[ \\hat{h}(k) := E[T_S | X_0 = k; T_S &lt; T_0]; \\quad k = 1; 2; \\dots ; S; \\]\nel tiempo esperado hasta que el jugador gana, condicionado a que nunca se alcance el estado 0. Usando las probabilidades de transición condicionadas de los puntos 7 y 8, plantee las ecuaciones en diferencias satisfechas por \\(\\hat{h}(k)\\) para \\(k = 1; 2; \\dots ; S - 1\\) y sus condiciones de contorno.\nNota: la deducción es estándar, pero hay que manejar con cuidado las probabilidades de transición condicionales. Surge la duda de si \\(\\hat{h}(0)\\) debe aparecer en el sistema—este punto puede resolverse y debe explicitarse.\n\nResuelva la cuestión del punto 9 en el caso \\(p = 1/2\\) y calcule \\(\\hat{h}(k)\\) para \\(k = 1; 2; \\dots ; S\\). ¿Qué puede decirse de \\(\\hat{h}(0)\\)? La respuesta puede obtenerse usando un argumento de primer paso.",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  },
  {
    "objectID": "practico1-letra.html#ejercicio-5",
    "href": "practico1-letra.html#ejercicio-5",
    "title": "Practico 1",
    "section": "Ejercicio 5",
    "text": "Ejercicio 5\nSea \\(n \\in \\mathbb{N}\\) y considere \\(n+1\\) personas numeradas \\(0; 1; \\dots ; n\\) sentadas en círculo. En el instante \\(t = 0\\) la persona \\(0\\) sostiene el brócoli. En tiempos discretos \\(t = 1; 2; \\dots :\\), quien sostiene el brócoli lo pasa a su vecino de la izquierda o de la derecha con probabilidad \\(1/2\\) cada una, de forma independiente de los pasos anteriores. Para \\(t \\ge 0\\), denote por\n\\[ A_t = \\{ \\text{personas que han tocado el brócoli alguna vez hasta el tiempo } t \\} \\]\nel conjunto de personas “tocadas”. El juego termina en el tiempo\n\\[ T := \\inf\\{t \\ge 0 : |A_t| = n\\}; \\]\nes decir, cuando exactamente una persona no ha sido tocada; dicha persona es declarada ganadora y puede comer el brócoli.\nSuponga que usted puede elegir su posición inicial \\(k \\in \\{0; 1; \\dots ; n\\}\\) antes de comenzar. ¿Qué posición elegiría?",
    "crumbs": [
      "Practicos",
      "Practico 1"
    ]
  }
]